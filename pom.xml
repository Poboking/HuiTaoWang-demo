<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <packaging>pom</packaging>
    <groupId>io.student</groupId>
    <artifactId>HuiTaoWang-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>HuiTaoWang-demo</name>
    <description>HuiTaoWang-demo</description>
    <properties>
        <java.version>21</java.version>
        <spring.boot.version>3.1.5</spring.boot.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
    </properties>

    <!-- 子模块 -->
    <modules>
        <module>module-tweet</module>
        <module>module-course</module>
        <module>module-dependencies</module>
        <module>module-framework</module>
        <module>module-interflow</module>
        <module>module-mall</module>
    </modules>

    <!-- Tips: dependencyManagement只声明版本不引入, 而dependencies才会默认引入到各个子模块中 -->
    <dependencyManagement>
        <dependencies>
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter</artifactId>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-starter-test</artifactId>-->
<!--                <scope>test</scope>-->
<!--            </dependency>-->

            <!-- 统一依赖管理-->
            <dependency>
                <groupId>org.example</groupId>
                <artifactId>module-dependencies</artifactId>
                <version>1.0-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--			<plugin>-->
            <!--				<groupId>org.springframework.boot</groupId>-->
            <!--				<artifactId>spring-boot-maven-plugin</artifactId>-->
            <!--			</plugin>-->
            <!-- maven-surefire-plugin 插件，用于运行单元测试。 -->
            <!-- 注意，需要使用 3.0.X+，因为要支持 Junit 5 版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <!-- maven-compiler-plugin 插件，解决 spring-boot-configuration-processor + Lombok + MapStruct 组合 -->
            <!-- https://stackoverflow.com/questions/33483697/re-run-spring-boot-configuration-annotation-processor-to-update-generated-metada -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${spring.boot.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
